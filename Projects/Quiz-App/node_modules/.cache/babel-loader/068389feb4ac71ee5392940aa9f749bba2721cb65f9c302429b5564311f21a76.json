{"ast":null,"code":"var _jsxFileName = \"D:\\\\GITHUB\\\\Github Repositeries\\\\ReactJS-Quiz\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Question from './Components/Question';\nimport Quiz from './Components/Quiz';\nimport Congrats from './Components/Congrats';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [quizData, setQuizData] = useState(null);\n  function handleQuizStart(data) {\n    setQuizData(data);\n    setPageNumber(2);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      onQuizStart: handleQuizStart,\n      isShowing: pageNumber === 1,\n      setPageNumber: setPageNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Quiz, {\n      quizData: quizData,\n      isShowing: pageNumber === 2,\n      setPageNumber: setPageNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Congrats, {\n      isShowing: pageNumber === 3,\n      setPageNumber: setPageNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pYyYpgYf997/Wv3qSrn+87TlwZU=\");\n_c = App;\nexport default App;\n\n// Logic\n\n// 1) I have to write logic that As per the user choice\n// number of questions, category and difficulty\n//So, I have to write that as per number of questions, when we click on start then \n//as per number of question only\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Question","Quiz","Congrats","useState","jsxDEV","_jsxDEV","App","_s","pageNumber","setPageNumber","quizData","setQuizData","handleQuizStart","data","className","children","onQuizStart","isShowing","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/GITHUB/Github Repositeries/ReactJS-Quiz/quiz-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Question from './Components/Question';\nimport Quiz from './Components/Quiz';\nimport Congrats from './Components/Congrats';\nimport { useState } from 'react';\n\nfunction App() {\n  const [pageNumber,setPageNumber]=useState(1)\n  const [quizData, setQuizData]= useState(null);\n\n  function handleQuizStart(data){\n    setQuizData(data);\n    setPageNumber(2);\n  }\n  return (\n    <div className=\"App\">\n      <Question onQuizStart={handleQuizStart}  isShowing={pageNumber===1} setPageNumber={setPageNumber}/>\n      <Quiz quizData={quizData} isShowing={pageNumber===2} setPageNumber={setPageNumber}/>\n      <Congrats isShowing={pageNumber===3} setPageNumber={setPageNumber}/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n// Logic\n\n// 1) I have to write logic that As per the user choice\n// number of questions, category and difficulty\n//So, I have to write that as per number of questions, when we click on start then \n//as per number of question only"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAACN,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAER,QAAQ,CAAC,IAAI,CAAC;EAE7C,SAASS,eAAeA,CAACC,IAAI,EAAC;IAC5BF,WAAW,CAACE,IAAI,CAAC;IACjBJ,aAAa,CAAC,CAAC,CAAC;EAClB;EACA,oBACEJ,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA,CAACL,QAAQ;MAACgB,WAAW,EAAEJ,eAAgB;MAAEK,SAAS,EAAET,UAAU,KAAG,CAAE;MAACC,aAAa,EAAEA;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnGhB,OAAA,CAACJ,IAAI;MAACS,QAAQ,EAAEA,QAAS;MAACO,SAAS,EAAET,UAAU,KAAG,CAAE;MAACC,aAAa,EAAEA;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpFhB,OAAA,CAACH,QAAQ;MAACe,SAAS,EAAET,UAAU,KAAG,CAAE;MAACC,aAAa,EAAEA;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV;AAACd,EAAA,CAfQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAiBZ,eAAeA,GAAG;;AAKlB;;AAEA;AACA;AACA;AACA;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}