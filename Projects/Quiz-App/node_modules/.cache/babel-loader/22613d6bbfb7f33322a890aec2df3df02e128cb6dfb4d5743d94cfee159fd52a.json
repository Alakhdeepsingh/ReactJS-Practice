{"ast":null,"code":"var _jsxFileName = \"D:\\\\GITHUB\\\\Github Repositeries\\\\ReactJS-Quiz\\\\quiz-app\\\\src\\\\Components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./quiz.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = props => {\n  _s();\n  const {\n    quizData,\n    loading\n  } = props;\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  function shuffleOptions(array) {\n    const shuffledArray = [...array]; // Create a copy of the original array to avoid mutating it directly\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  }\n  useEffect(() => {\n    if (quizData && quizData.length > 0) {\n      const currentQuestion = quizData[currentQuestionIndex];\n      console.log(currentQuestionIndex);\n      const allOptions = [currentQuestion.correct_answer, ...currentQuestion.incorrect_answers];\n      const temp = shuffleOptions(allOptions);\n      console.log(temp);\n      setShuffledOptions(temp);\n    }\n  }, [quizData, currentQuestionIndex]);\n  const startQuiz = e => {\n    e.preventDefault();\n    if (currentQuestionIndex < quizData.length) {}\n    setCurrentQuestionIndex(prev => prev + 1);\n    if (currentQuestionIndex === quizData.length - 1) {\n      setQuizCompleted(true);\n      props.setPageNumber(3);\n    }\n  };\n  const handleAnswerClick = answer => {\n    const correctAnswer = quizData[currentQuestionIndex].correct_answer;\n    const userAnsweredCorrectly = answer === correctAnswer;\n    if (currentQuestionIndex < quizData.length && !userAnsweredCorrectly) {\n      props.setAnsweredCorrectly(prev => prev);\n    } else if (userAnsweredCorrectly) {\n      props.setAnsweredCorrectly(prev => prev + 1);\n    }\n    setCurrentQuestionIndex(prev => prev + 1);\n    if (currentQuestionIndex === quizData.length - 1) {\n      setQuizCompleted(true);\n      props.setPageNumber(3);\n    }\n  };\n  console.log(loading);\n  return props.isShowing && !loading && !quizCompleted && quizData && quizData.length > 0 && currentQuestionIndex < quizData.length && props.loading === false && /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"correct-answers\",\n        children: [\"correct answers : \", props.answeredCorrectly, \"/\", currentQuestionIndex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          dangerouslySetInnerHTML: {\n            __html: quizData[currentQuestionIndex].question\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: shuffledOptions.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"answer-btn\",\n            onClick: e => {\n              handleAnswerClick(answer);\n            },\n            children: answer\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), currentQuestionIndex !== quizData.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"next-question\",\n        onClick: e => startQuiz(e),\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n};\n_s(Quiz, \"k3F86EMoWHuiaashRvebKG3u7uM=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","props","_s","quizData","loading","quizCompleted","setQuizCompleted","shuffledOptions","setShuffledOptions","currentQuestionIndex","setCurrentQuestionIndex","shuffleOptions","array","shuffledArray","i","length","j","Math","floor","random","currentQuestion","console","log","allOptions","correct_answer","incorrect_answers","temp","startQuiz","e","preventDefault","prev","setPageNumber","handleAnswerClick","answer","correctAnswer","userAnsweredCorrectly","setAnsweredCorrectly","isShowing","children","className","fileName","_jsxFileName","lineNumber","columnNumber","answeredCorrectly","dangerouslySetInnerHTML","__html","question","map","index","onClick","type","_c","$RefreshReg$"],"sources":["D:/GITHUB/Github Repositeries/ReactJS-Quiz/quiz-app/src/Components/Quiz.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./quiz.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Quiz = (props) => {\r\n  const { quizData, loading } = props;\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [shuffledOptions, setShuffledOptions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\r\n  function shuffleOptions(array) {\r\n    const shuffledArray = [...array]; // Create a copy of the original array to avoid mutating it directly\r\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffledArray[i], shuffledArray[j]] = [\r\n        shuffledArray[j],\r\n        shuffledArray[i],\r\n      ];\r\n    }\r\n    return shuffledArray;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (quizData && quizData.length > 0) {\r\n      const currentQuestion = quizData[currentQuestionIndex];\r\n      console.log(currentQuestionIndex);\r\n      const allOptions = [\r\n        currentQuestion.correct_answer,\r\n        ...currentQuestion.incorrect_answers,\r\n      ];\r\n\r\n      const temp = shuffleOptions(allOptions);\r\n      console.log(temp);\r\n      setShuffledOptions(temp);\r\n    }\r\n  }, [quizData, currentQuestionIndex]);\r\n\r\n  const startQuiz = (e) => {\r\n    e.preventDefault();\r\n    if (currentQuestionIndex < quizData.length) {\r\n    }\r\n    setCurrentQuestionIndex((prev) => prev + 1);\r\n\r\n    if (currentQuestionIndex === quizData.length - 1) {\r\n      setQuizCompleted(true);\r\n      props.setPageNumber(3);\r\n    }\r\n  };\r\n\r\n  const handleAnswerClick = (answer) => {\r\n    const correctAnswer = quizData[currentQuestionIndex].correct_answer;\r\n\r\n    const userAnsweredCorrectly = answer === correctAnswer;\r\n\r\n    if (currentQuestionIndex < quizData.length && !userAnsweredCorrectly) {\r\n      props.setAnsweredCorrectly((prev) => prev);\r\n    } else if (userAnsweredCorrectly) {\r\n      props.setAnsweredCorrectly((prev) => prev + 1);\r\n    }\r\n\r\n    setCurrentQuestionIndex((prev) => prev + 1);\r\n    if (currentQuestionIndex === quizData.length - 1) {\r\n      setQuizCompleted(true);\r\n      props.setPageNumber(3);\r\n    }\r\n  };\r\n  console.log(loading);\r\n  return (\r\n    props.isShowing &&\r\n    !loading &&\r\n    !quizCompleted &&\r\n    quizData &&\r\n    quizData.length > 0 &&\r\n    currentQuestionIndex < quizData.length &&\r\n    props.loading === false && (\r\n      <main>\r\n        <div className=\"modal-container\">\r\n          <div className=\"modal-content\"></div>\r\n        </div>\r\n        <section className=\"quiz\">\r\n          <p className=\"correct-answers\">\r\n            correct answers : {props.answeredCorrectly}/{currentQuestionIndex}\r\n          </p>\r\n          <article className=\"container\">\r\n            <h2\r\n              dangerouslySetInnerHTML={{\r\n                __html: quizData[currentQuestionIndex].question,\r\n              }}\r\n            ></h2>\r\n            <div className=\"btn-container\">\r\n              {shuffledOptions.map((answer, index) => (\r\n                <button\r\n                  key={index}\r\n                  className=\"answer-btn\"\r\n                  onClick={(e) => {\r\n                    handleAnswerClick(answer);\r\n                  }}\r\n                >\r\n                  {answer}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </article>\r\n          {currentQuestionIndex !== quizData.length && (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"next-question\"\r\n              onClick={(e) => startQuiz(e)}\r\n            >\r\n              Next Question\r\n            </button>\r\n          )}\r\n        </section>\r\n      </main>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}