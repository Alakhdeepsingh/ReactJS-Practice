{"ast":null,"code":"var _jsxFileName = \"D:\\\\GITHUB\\\\Github Repositeries\\\\ReactJS-Quiz\\\\quiz-app\\\\src\\\\Components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./quiz.css\";\nimport { useState, useEffect } from \"react\";\nimport { Oval } from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = props => {\n  _s();\n  const {\n    quizData\n  } = props;\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  // const [answeredCorrectly, setAnsweredCorrectly] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  useEffect(() => {\n    if (quizData && quizData.length > 0) {\n      const currentQuestion = quizData[currentQuestionIndex];\n      const allOptions = [currentQuestion.correct_answer, ...currentQuestion.incorrect_answers];\n      shuffleOptions(allOptions);\n    }\n  }, [currentQuestionIndex, quizData]);\n  const startQuiz = e => {\n    e.preventDefault();\n    // props.setLoading();\n    // props.setPageNumber(3);\n    if (currentQuestionIndex < quizData.length) {\n      props.setAnsweredCorrectly(prev => prev); // Treat the question as incorrect\n    }\n\n    // Move to the next question\n    setCurrentQuestionIndex(prev => prev + 1);\n\n    // If the user has completed all questions, show the \"Congrats\" page\n    if (currentQuestionIndex === quizData.length - 1) {\n      setQuizCompleted(true);\n      props.setPageNumber(3);\n    }\n  };\n  const shuffleOptions = options => {\n    // Randomly shuffle the array of options\n    const shuffled = options.sort(() => Math.random() - 0.5);\n    setShuffledOptions(shuffled);\n  };\n  const handleAnswerClick = answer => {\n    // Check if the selected answer is correct\n    // if (currentQuestionIndex === quizData.length) {\n    //   props.setPageNumber(1);\n    //   setQuizCompleted(true);\n    //   return;\n    // }\n    const correctAnswer = quizData[currentQuestionIndex].correct_answer;\n    const userAnsweredCorrectly = answer === correctAnswer;\n    if (currentQuestionIndex < quizData.length && !userAnsweredCorrectly) {\n      props.setAnsweredCorrectly(prev => prev);\n    } else if (userAnsweredCorrectly) {\n      props.setAnsweredCorrectly(prev => prev + 1);\n    }\n\n    // Move to the next question\n    setCurrentQuestionIndex(prev => prev + 1);\n  };\n  quizData && console.log(currentQuestionIndex, quizData.length);\n  return props.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loader-container\",\n    children: /*#__PURE__*/_jsxDEV(Oval, {\n      height: 80,\n      width: 80,\n      color: \"#0000FF\",\n      visible: true,\n      ariaLabel: \"oval-loading\",\n      secondaryColor: \"#4fa94d\",\n      strokeWidth: 2,\n      strokeWidthSecondary: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this) : props.isShowing && !quizCompleted && quizData && currentQuestionIndex < quizData.length && props.loading === false && /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"correct-answers\",\n        children: [\"correct answers : \", props.answeredCorrectly, \"/\", currentQuestionIndex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          dangerouslySetInnerHTML: {\n            __html: quizData[currentQuestionIndex].question\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [shuffledOptions.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"answer-btn\",\n            onClick: () => handleAnswerClick(quizData[currentQuestionIndex].correct_answer),\n            children: quizData[currentQuestionIndex].correct_answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)), quizData[currentQuestionIndex].incorrect_answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"answer-btn\",\n            onClick: () => handleAnswerClick(answer),\n            children: answer\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), currentQuestionIndex !== quizData.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"next-question\",\n        onClick: e => startQuiz(e),\n        children: \"next question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"De2npvU0yAnrzUR5V8NKb6+jOjg=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Oval","jsxDEV","_jsxDEV","Quiz","props","_s","quizData","currentQuestionIndex","setCurrentQuestionIndex","quizCompleted","setQuizCompleted","shuffledOptions","setShuffledOptions","length","currentQuestion","allOptions","correct_answer","incorrect_answers","shuffleOptions","startQuiz","e","preventDefault","setAnsweredCorrectly","prev","setPageNumber","options","shuffled","sort","Math","random","handleAnswerClick","answer","correctAnswer","userAnsweredCorrectly","console","log","loading","className","children","height","width","color","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","fileName","_jsxFileName","lineNumber","columnNumber","isShowing","answeredCorrectly","dangerouslySetInnerHTML","__html","question","map","index","onClick","type","_c","$RefreshReg$"],"sources":["D:/GITHUB/Github Repositeries/ReactJS-Quiz/quiz-app/src/Components/Quiz.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./quiz.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Oval } from \"react-loader-spinner\";\r\n\r\nconst Quiz = (props) => {\r\n  const { quizData } = props;\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  // const [answeredCorrectly, setAnsweredCorrectly] = useState(0);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [shuffledOptions, setShuffledOptions] = useState([]);\r\n  useEffect(() => {\r\n    if (quizData && quizData.length > 0) {\r\n      const currentQuestion = quizData[currentQuestionIndex];\r\n      const allOptions = [\r\n        currentQuestion.correct_answer,\r\n        ...currentQuestion.incorrect_answers,\r\n      ];\r\n      shuffleOptions(allOptions);\r\n    }\r\n  }, [currentQuestionIndex, quizData]);\r\n  const startQuiz = (e) => {\r\n    e.preventDefault();\r\n    // props.setLoading();\r\n    // props.setPageNumber(3);\r\n    if (currentQuestionIndex < quizData.length) {\r\n      props.setAnsweredCorrectly((prev) => prev); // Treat the question as incorrect\r\n    }\r\n\r\n    // Move to the next question\r\n    setCurrentQuestionIndex((prev) => prev + 1);\r\n\r\n    // If the user has completed all questions, show the \"Congrats\" page\r\n    if (currentQuestionIndex === quizData.length - 1) {\r\n      setQuizCompleted(true);\r\n      props.setPageNumber(3);\r\n    }\r\n  };\r\n\r\n  const shuffleOptions = (options) => {\r\n    // Randomly shuffle the array of options\r\n    const shuffled = options.sort(() => Math.random() - 0.5);\r\n    setShuffledOptions(shuffled);\r\n  };\r\n\r\n  const handleAnswerClick = (answer) => {\r\n    // Check if the selected answer is correct\r\n    // if (currentQuestionIndex === quizData.length) {\r\n    //   props.setPageNumber(1);\r\n    //   setQuizCompleted(true);\r\n    //   return;\r\n    // }\r\n    const correctAnswer = quizData[currentQuestionIndex].correct_answer;\r\n\r\n    const userAnsweredCorrectly = answer === correctAnswer;\r\n\r\n    if (currentQuestionIndex < quizData.length && !userAnsweredCorrectly) {\r\n      props.setAnsweredCorrectly((prev) => prev);\r\n    } else if (userAnsweredCorrectly) {\r\n      props.setAnsweredCorrectly((prev) => prev + 1);\r\n    }\r\n\r\n    // Move to the next question\r\n    setCurrentQuestionIndex((prev) => prev + 1);\r\n  };\r\n\r\n  quizData && console.log(currentQuestionIndex, quizData.length);\r\n  return props.loading ? (\r\n    <div className=\"loader-container\">\r\n      <Oval\r\n        height={80}\r\n        width={80}\r\n        color=\"#0000FF\"\r\n        visible={true}\r\n        ariaLabel=\"oval-loading\"\r\n        secondaryColor=\"#4fa94d\"\r\n        strokeWidth={2}\r\n        strokeWidthSecondary={2}\r\n      />\r\n    </div>\r\n  ) : (\r\n    props.isShowing &&\r\n      !quizCompleted &&\r\n      quizData &&\r\n      currentQuestionIndex < quizData.length &&\r\n      props.loading === false && (\r\n        <main>\r\n          <div className=\"modal-container\">\r\n            <div className=\"modal-content\"></div>\r\n          </div>\r\n          <section className=\"quiz\">\r\n            <p className=\"correct-answers\">\r\n              correct answers : {props.answeredCorrectly}/{currentQuestionIndex}\r\n            </p>\r\n            <article className=\"container\">\r\n              <h2\r\n                dangerouslySetInnerHTML={{\r\n                  __html: quizData[currentQuestionIndex].question,\r\n                }}\r\n              ></h2>\r\n              <div className=\"btn-container\">\r\n                {shuffledOptions.map((answer, index) => (\r\n                  <button\r\n                    className=\"answer-btn\"\r\n                    onClick={() =>\r\n                      handleAnswerClick(\r\n                        quizData[currentQuestionIndex].correct_answer\r\n                      )\r\n                    }\r\n                  >\r\n                    {quizData[currentQuestionIndex].correct_answer}\r\n                  </button>\r\n                ))}\r\n                {quizData[currentQuestionIndex].incorrect_answers.map(\r\n                  (answer, index) => (\r\n                    <button\r\n                      key={index}\r\n                      className=\"answer-btn\"\r\n                      onClick={() => handleAnswerClick(answer)}\r\n                    >\r\n                      {answer}\r\n                    </button>\r\n                  )\r\n                )}\r\n              </div>\r\n            </article>\r\n            {currentQuestionIndex !== quizData.length && (\r\n              <button\r\n                type=\"submit\"\r\n                className=\"next-question\"\r\n                onClick={(e) => startQuiz(e)}\r\n              >\r\n                next question\r\n              </button>\r\n            )}\r\n          </section>\r\n        </main>\r\n      )\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}